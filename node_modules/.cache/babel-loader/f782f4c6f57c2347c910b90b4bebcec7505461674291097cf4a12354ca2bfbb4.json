{"ast":null,"code":"import _objectSpread from\"C:/Users/hakimm/Desktop/beta/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{supabase,PRODUCTS_TABLE}from'../lib/supabase';/**\r\n * Product Entity\r\n * Represents furniture and decor products in the e-commerce system\r\n */export class Product{constructor(){let data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};this.id=data.id||null;this.name=data.name||'';this.description=data.description||'';this.price=data.price||0;this.category=data.category||'decor';this.image_url=data.image_url||'';this.gallery_images=data.gallery_images||[];this.featured=data.featured!==undefined?data.featured:false;this.created_date=data.created_date||new Date().toISOString();}/**\r\n   * Validate product data\r\n   * @returns {Object} Validation result with isValid and errors\r\n   */validate(){const errors=[];if(!this.name||this.name.trim().length===0){errors.push('Product name is required');}if(!this.price||this.price<=0){errors.push('Product price must be greater than 0');}const validCategories=['living_room','bedroom','kitchen','bathroom','office','outdoor','lighting','decor'];if(!this.category||!validCategories.includes(this.category)){errors.push('Valid category is required');}return{isValid:errors.length===0,errors};}/**\r\n   * Convert to plain object\r\n   * @returns {Object} Plain object representation\r\n   */toJSON(){return{id:this.id,name:this.name,description:this.description,price:this.price,category:this.category,image_url:this.image_url,gallery_images:this.gallery_images,featured:this.featured,created_date:this.created_date};}/**\r\n   * Get formatted price with currency\r\n   * @returns {string} Formatted price\r\n   */getFormattedPrice(){return\"\".concat(this.price,\" DA\");}/**\r\n   * Get category display name\r\n   * @returns {string} Human-readable category name\r\n   */getCategoryDisplayName(){return this.category.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase());}/**\r\n   * Check if product has gallery images\r\n   * @returns {boolean} True if gallery images exist\r\n   */hasGalleryImages(){return this.gallery_images&&this.gallery_images.length>0;}// Static methods for data operations (Supabase implementation)\n/**\r\n   * Get all products with optional sorting\r\n   * @param {string} sortBy - Sort field (e.g., 'name', '-price', 'created_date')\r\n   * @returns {Promise<Product[]>} Array of products\r\n   */static async list(){let sortBy=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'-created_date';try{// Fallback to mock data if Supabase is not configured\nif(!supabase||process.env.REACT_APP_SUPABASE_URL==='YOUR_SUPABASE_URL'){return this.getMockData(sortBy);}let query=supabase.from(PRODUCTS_TABLE).select('*');// Handle sorting\nconst sortField=sortBy.startsWith('-')?sortBy.slice(1):sortBy;const ascending=!sortBy.startsWith('-');query=query.order(sortField,{ascending});const{data,error}=await query;if(error){console.error('Error fetching products:',error);return this.getMockData(sortBy);}return data.map(item=>new Product(item));}catch(error){console.error('Error in Product.list:',error);return this.getMockData(sortBy);}}static getMockData(){let sortBy=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'-created_date';const mockProducts=[new Product({id:'1',name:'Modern Sofa Set',description:'Comfortable 3-seater sofa with premium fabric upholstery',price:45000,category:'living_room',image_url:'https://images.unsplash.com/photo-1555041469-a586c61ea9bc?w=800',featured:true}),new Product({id:'2',name:'Oak Dining Table',description:'Solid oak dining table for 6 people',price:35000,category:'kitchen',image_url:'https://images.unsplash.com/photo-1449247709967-d4461a6a6103?w=800',featured:true}),new Product({id:'3',name:'Bedside Lamp',description:'Modern ceramic bedside lamp with warm lighting',price:8500,category:'lighting',image_url:'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=800',featured:false}),new Product({id:'4',name:'Leather Armchair',description:'Premium leather armchair with ergonomic design',price:28000,category:'living_room',image_url:'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=800',featured:true}),new Product({id:'5',name:'Kitchen Island',description:'Multi-functional kitchen island with storage',price:55000,category:'kitchen',image_url:'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=800',featured:false}),new Product({id:'6',name:'Garden Bench',description:'Weather-resistant outdoor bench',price:15000,category:'outdoor',image_url:'https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?w=800',featured:true})];// Simple sorting implementation\nconst sortField=sortBy.startsWith('-')?sortBy.slice(1):sortBy;const sortOrder=sortBy.startsWith('-')?-1:1;return mockProducts.sort((a,b)=>{let aVal=a[sortField];let bVal=b[sortField];if(typeof aVal==='string'){aVal=aVal.toLowerCase();bVal=bVal.toLowerCase();}if(aVal<bVal)return-1*sortOrder;if(aVal>bVal)return 1*sortOrder;return 0;});}/**\r\n   * Get products with filters\r\n   * @param {Object} filters - Filter criteria\r\n   * @param {string} sortBy - Sort field\r\n   * @param {number} limit - Maximum number of results\r\n   * @returns {Promise<Product[]>} Filtered products\r\n   */static async filter(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let sortBy=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'-created_date';let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;try{// Fallback to mock data if Supabase is not configured\nif(!supabase||process.env.REACT_APP_SUPABASE_URL==='YOUR_SUPABASE_URL'){const allProducts=this.getMockData(sortBy);let filtered=allProducts.filter(product=>{for(const[key,value]of Object.entries(filters)){if(product[key]!==value){return false;}}return true;});if(limit){filtered=filtered.slice(0,limit);}return filtered;}let query=supabase.from(PRODUCTS_TABLE).select('*');// Apply filters\nfor(const[key,value]of Object.entries(filters)){query=query.eq(key,value);}// Handle sorting\nconst sortField=sortBy.startsWith('-')?sortBy.slice(1):sortBy;const ascending=!sortBy.startsWith('-');query=query.order(sortField,{ascending});// Apply limit\nif(limit){query=query.limit(limit);}const{data,error}=await query;if(error){console.error('Error filtering products:',error);// Fallback to mock data\nconst allProducts=this.getMockData(sortBy);let filtered=allProducts.filter(product=>{for(const[key,value]of Object.entries(filters)){if(product[key]!==value){return false;}}return true;});if(limit){filtered=filtered.slice(0,limit);}return filtered;}return data.map(item=>new Product(item));}catch(error){console.error('Error in Product.filter:',error);// Fallback to mock data\nconst allProducts=this.getMockData(sortBy);let filtered=allProducts.filter(product=>{for(const[key,value]of Object.entries(filters)){if(product[key]!==value){return false;}}return true;});if(limit){filtered=filtered.slice(0,limit);}return filtered;}}/**\r\n   * Get single product by ID\r\n   * @param {string} id - Product ID\r\n   * @returns {Promise<Product|null>} Product or null if not found\r\n   */static async get(id){try{// Fallback to mock data if Supabase is not configured\nif(!supabase||process.env.REACT_APP_SUPABASE_URL==='YOUR_SUPABASE_URL'){const allProducts=this.getMockData();return allProducts.find(product=>product.id===id)||null;}const{data,error}=await supabase.from(PRODUCTS_TABLE).select('*').eq('id',id).single();if(error){if(error.code==='PGRST116'){// No rows returned\nreturn null;}console.error('Error fetching product:',error);// Fallback to mock data\nconst allProducts=this.getMockData();return allProducts.find(product=>product.id===id)||null;}return new Product(data);}catch(error){console.error('Error in Product.get:',error);// Fallback to mock data\nconst allProducts=this.getMockData();return allProducts.find(product=>product.id===id)||null;}}/**\r\n   * Create new product\r\n   * @param {Object} data - Product data\r\n   * @returns {Promise<Product>} Created product\r\n   */static async create(data){const product=new Product(_objectSpread(_objectSpread({},data),{},{created_date:new Date().toISOString()}));const validation=product.validate();if(!validation.isValid){throw new Error(\"Validation failed: \".concat(validation.errors.join(', ')));}try{// Check if Supabase is configured\nif(!supabase||process.env.REACT_APP_SUPABASE_URL==='YOUR_SUPABASE_URL'){throw new Error('Supabase not configured. Please check your environment variables.');}const{data:insertedData,error}=await supabase.from(PRODUCTS_TABLE).insert([product.toJSON()]).select().single();if(error){console.error('Error creating product:',error);// Provide more specific error messages\nif(error.code==='42501'){throw new Error('Permission denied. Please ensure you are logged in as admin.');}else if(error.code==='23505'){throw new Error('Product with this name already exists.');}else{throw new Error(\"Database error: \".concat(error.message));}}return new Product(insertedData);}catch(error){console.error('Error in Product.create:',error);throw error;}}/**\r\n   * Update existing product\r\n   * @param {string} id - Product ID\r\n   * @param {Object} data - Updated data\r\n   * @returns {Promise<Product|null>} Updated product or null if not found\r\n   */static async update(id,data){try{// First check if product exists\nconst existingProduct=await this.get(id);if(!existingProduct){return null;}// Update properties\nObject.assign(existingProduct,data);const validation=existingProduct.validate();if(!validation.isValid){throw new Error(\"Validation failed: \".concat(validation.errors.join(', ')));}const{data:updatedData,error}=await supabase.from(PRODUCTS_TABLE).update(existingProduct.toJSON()).eq('id',id).select().single();if(error){console.error('Error updating product:',error);throw new Error(\"Failed to update product: \".concat(error.message));}return new Product(updatedData);}catch(error){console.error('Error in Product.update:',error);throw error;}}/**\r\n   * Delete product\r\n   * @param {string} id - Product ID\r\n   * @returns {Promise<boolean>} True if deleted successfully\r\n   */static async delete(id){try{const{error}=await supabase.from(PRODUCTS_TABLE).delete().eq('id',id);if(error){console.error('Error deleting product:',error);throw new Error(\"Failed to delete product: \".concat(error.message));}return true;}catch(error){console.error('Error in Product.delete:',error);throw error;}}}","map":{"version":3,"names":["supabase","PRODUCTS_TABLE","Product","constructor","data","arguments","length","undefined","id","name","description","price","category","image_url","gallery_images","featured","created_date","Date","toISOString","validate","errors","trim","push","validCategories","includes","isValid","toJSON","getFormattedPrice","concat","getCategoryDisplayName","replace","l","toUpperCase","hasGalleryImages","list","sortBy","process","env","REACT_APP_SUPABASE_URL","getMockData","query","from","select","sortField","startsWith","slice","ascending","order","error","console","map","item","mockProducts","sortOrder","sort","a","b","aVal","bVal","toLowerCase","filter","filters","limit","allProducts","filtered","product","key","value","Object","entries","eq","get","find","single","code","create","_objectSpread","validation","Error","join","insertedData","insert","message","update","existingProduct","assign","updatedData","delete"],"sources":["C:/Users/hakimm/Desktop/beta/src/entities/Product.js"],"sourcesContent":["import { supabase, PRODUCTS_TABLE } from '../lib/supabase';\r\n\r\n/**\r\n * Product Entity\r\n * Represents furniture and decor products in the e-commerce system\r\n */\r\nexport class Product {\r\n  constructor(data = {}) {\r\n    this.id = data.id || null;\r\n    this.name = data.name || '';\r\n    this.description = data.description || '';\r\n    this.price = data.price || 0;\r\n    this.category = data.category || 'decor';\r\n    this.image_url = data.image_url || '';\r\n    this.gallery_images = data.gallery_images || [];\r\n    this.featured = data.featured !== undefined ? data.featured : false;\r\n    this.created_date = data.created_date || new Date().toISOString();\r\n  }\r\n\r\n  /**\r\n   * Validate product data\r\n   * @returns {Object} Validation result with isValid and errors\r\n   */\r\n  validate() {\r\n    const errors = [];\r\n    \r\n    if (!this.name || this.name.trim().length === 0) {\r\n      errors.push('Product name is required');\r\n    }\r\n    \r\n    if (!this.price || this.price <= 0) {\r\n      errors.push('Product price must be greater than 0');\r\n    }\r\n    \r\n    const validCategories = [\r\n      'living_room', 'bedroom', 'kitchen', 'bathroom', \r\n      'office', 'outdoor', 'lighting', 'decor'\r\n    ];\r\n    \r\n    if (!this.category || !validCategories.includes(this.category)) {\r\n      errors.push('Valid category is required');\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Convert to plain object\r\n   * @returns {Object} Plain object representation\r\n   */\r\n  toJSON() {\r\n    return {\r\n      id: this.id,\r\n      name: this.name,\r\n      description: this.description,\r\n      price: this.price,\r\n      category: this.category,\r\n      image_url: this.image_url,\r\n      gallery_images: this.gallery_images,\r\n      featured: this.featured,\r\n      created_date: this.created_date\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get formatted price with currency\r\n   * @returns {string} Formatted price\r\n   */\r\n  getFormattedPrice() {\r\n    return `${this.price} DA`;\r\n  }\r\n\r\n  /**\r\n   * Get category display name\r\n   * @returns {string} Human-readable category name\r\n   */\r\n  getCategoryDisplayName() {\r\n    return this.category.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\r\n  }\r\n\r\n  /**\r\n   * Check if product has gallery images\r\n   * @returns {boolean} True if gallery images exist\r\n   */\r\n  hasGalleryImages() {\r\n    return this.gallery_images && this.gallery_images.length > 0;\r\n  }\r\n\r\n\r\n  // Static methods for data operations (Supabase implementation)\r\n  \r\n  /**\r\n   * Get all products with optional sorting\r\n   * @param {string} sortBy - Sort field (e.g., 'name', '-price', 'created_date')\r\n   * @returns {Promise<Product[]>} Array of products\r\n   */\r\n  static async list(sortBy = '-created_date') {\r\n    try {\r\n      // Fallback to mock data if Supabase is not configured\r\n      if (!supabase || process.env.REACT_APP_SUPABASE_URL === 'YOUR_SUPABASE_URL') {\r\n        return this.getMockData(sortBy);\r\n      }\r\n\r\n      let query = supabase.from(PRODUCTS_TABLE).select('*');\r\n      \r\n      // Handle sorting\r\n      const sortField = sortBy.startsWith('-') ? sortBy.slice(1) : sortBy;\r\n      const ascending = !sortBy.startsWith('-');\r\n      \r\n      query = query.order(sortField, { ascending });\r\n      \r\n      const { data, error } = await query;\r\n      \r\n      if (error) {\r\n        console.error('Error fetching products:', error);\r\n        return this.getMockData(sortBy);\r\n      }\r\n      \r\n      return data.map(item => new Product(item));\r\n    } catch (error) {\r\n      console.error('Error in Product.list:', error);\r\n      return this.getMockData(sortBy);\r\n    }\r\n  }\r\n\r\n  static getMockData(sortBy = '-created_date') {\r\n    const mockProducts = [\r\n      new Product({\r\n        id: '1',\r\n        name: 'Modern Sofa Set',\r\n        description: 'Comfortable 3-seater sofa with premium fabric upholstery',\r\n        price: 45000,\r\n        category: 'living_room',\r\n        image_url: 'https://images.unsplash.com/photo-1555041469-a586c61ea9bc?w=800',\r\n        featured: true,\r\n      }),\r\n      new Product({\r\n        id: '2',\r\n        name: 'Oak Dining Table',\r\n        description: 'Solid oak dining table for 6 people',\r\n        price: 35000,\r\n        category: 'kitchen',\r\n        image_url: 'https://images.unsplash.com/photo-1449247709967-d4461a6a6103?w=800',\r\n        featured: true,\r\n      }),\r\n      new Product({\r\n        id: '3',\r\n        name: 'Bedside Lamp',\r\n        description: 'Modern ceramic bedside lamp with warm lighting',\r\n        price: 8500,\r\n        category: 'lighting',\r\n        image_url: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=800',\r\n        featured: false,\r\n      }),\r\n      new Product({\r\n        id: '4',\r\n        name: 'Leather Armchair',\r\n        description: 'Premium leather armchair with ergonomic design',\r\n        price: 28000,\r\n        category: 'living_room',\r\n        image_url: 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=800',\r\n        featured: true,\r\n      }),\r\n      new Product({\r\n        id: '5',\r\n        name: 'Kitchen Island',\r\n        description: 'Multi-functional kitchen island with storage',\r\n        price: 55000,\r\n        category: 'kitchen',\r\n        image_url: 'https://images.unsplash.com/photo-1556909114-f6e7ad7d3136?w=800',\r\n        featured: false,\r\n      }),\r\n      new Product({\r\n        id: '6',\r\n        name: 'Garden Bench',\r\n        description: 'Weather-resistant outdoor bench',\r\n        price: 15000,\r\n        category: 'outdoor',\r\n        image_url: 'https://images.unsplash.com/photo-1506439773649-6e0eb8cfb237?w=800',\r\n        featured: true,\r\n      })\r\n    ];\r\n\r\n    // Simple sorting implementation\r\n    const sortField = sortBy.startsWith('-') ? sortBy.slice(1) : sortBy;\r\n    const sortOrder = sortBy.startsWith('-') ? -1 : 1;\r\n    \r\n    return mockProducts.sort((a, b) => {\r\n      let aVal = a[sortField];\r\n      let bVal = b[sortField];\r\n      \r\n      if (typeof aVal === 'string') {\r\n        aVal = aVal.toLowerCase();\r\n        bVal = bVal.toLowerCase();\r\n      }\r\n      \r\n      if (aVal < bVal) return -1 * sortOrder;\r\n      if (aVal > bVal) return 1 * sortOrder;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get products with filters\r\n   * @param {Object} filters - Filter criteria\r\n   * @param {string} sortBy - Sort field\r\n   * @param {number} limit - Maximum number of results\r\n   * @returns {Promise<Product[]>} Filtered products\r\n   */\r\n  static async filter(filters = {}, sortBy = '-created_date', limit = null) {\r\n    try {\r\n      // Fallback to mock data if Supabase is not configured\r\n      if (!supabase || process.env.REACT_APP_SUPABASE_URL === 'YOUR_SUPABASE_URL') {\r\n        const allProducts = this.getMockData(sortBy);\r\n        \r\n        let filtered = allProducts.filter(product => {\r\n          for (const [key, value] of Object.entries(filters)) {\r\n            if (product[key] !== value) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        });\r\n        \r\n        if (limit) {\r\n          filtered = filtered.slice(0, limit);\r\n        }\r\n        \r\n        return filtered;\r\n      }\r\n\r\n      let query = supabase.from(PRODUCTS_TABLE).select('*');\r\n      \r\n      // Apply filters\r\n      for (const [key, value] of Object.entries(filters)) {\r\n        query = query.eq(key, value);\r\n      }\r\n      \r\n      // Handle sorting\r\n      const sortField = sortBy.startsWith('-') ? sortBy.slice(1) : sortBy;\r\n      const ascending = !sortBy.startsWith('-');\r\n      query = query.order(sortField, { ascending });\r\n      \r\n      // Apply limit\r\n      if (limit) {\r\n        query = query.limit(limit);\r\n      }\r\n      \r\n      const { data, error } = await query;\r\n      \r\n      if (error) {\r\n        console.error('Error filtering products:', error);\r\n        // Fallback to mock data\r\n        const allProducts = this.getMockData(sortBy);\r\n        let filtered = allProducts.filter(product => {\r\n          for (const [key, value] of Object.entries(filters)) {\r\n            if (product[key] !== value) {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        });\r\n        \r\n        if (limit) {\r\n          filtered = filtered.slice(0, limit);\r\n        }\r\n        \r\n        return filtered;\r\n      }\r\n      \r\n      return data.map(item => new Product(item));\r\n    } catch (error) {\r\n      console.error('Error in Product.filter:', error);\r\n      // Fallback to mock data\r\n      const allProducts = this.getMockData(sortBy);\r\n      let filtered = allProducts.filter(product => {\r\n        for (const [key, value] of Object.entries(filters)) {\r\n          if (product[key] !== value) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n      \r\n      if (limit) {\r\n        filtered = filtered.slice(0, limit);\r\n      }\r\n      \r\n      return filtered;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get single product by ID\r\n   * @param {string} id - Product ID\r\n   * @returns {Promise<Product|null>} Product or null if not found\r\n   */\r\n  static async get(id) {\r\n    try {\r\n      // Fallback to mock data if Supabase is not configured\r\n      if (!supabase || process.env.REACT_APP_SUPABASE_URL === 'YOUR_SUPABASE_URL') {\r\n        const allProducts = this.getMockData();\r\n        return allProducts.find(product => product.id === id) || null;\r\n      }\r\n\r\n      const { data, error } = await supabase\r\n        .from(PRODUCTS_TABLE)\r\n        .select('*')\r\n        .eq('id', id)\r\n        .single();\r\n      \r\n      if (error) {\r\n        if (error.code === 'PGRST116') {\r\n          // No rows returned\r\n          return null;\r\n        }\r\n        console.error('Error fetching product:', error);\r\n        // Fallback to mock data\r\n        const allProducts = this.getMockData();\r\n        return allProducts.find(product => product.id === id) || null;\r\n      }\r\n      \r\n      return new Product(data);\r\n    } catch (error) {\r\n      console.error('Error in Product.get:', error);\r\n      // Fallback to mock data\r\n      const allProducts = this.getMockData();\r\n      return allProducts.find(product => product.id === id) || null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create new product\r\n   * @param {Object} data - Product data\r\n   * @returns {Promise<Product>} Created product\r\n   */\r\n  static async create(data) {\r\n    const product = new Product({\r\n      ...data,\r\n      created_date: new Date().toISOString()\r\n    });\r\n    \r\n    const validation = product.validate();\r\n    if (!validation.isValid) {\r\n      throw new Error(`Validation failed: ${validation.errors.join(', ')}`);\r\n    }\r\n    \r\n    try {\r\n      // Check if Supabase is configured\r\n      if (!supabase || process.env.REACT_APP_SUPABASE_URL === 'YOUR_SUPABASE_URL') {\r\n        throw new Error('Supabase not configured. Please check your environment variables.');\r\n      }\r\n\r\n      const { data: insertedData, error } = await supabase\r\n        .from(PRODUCTS_TABLE)\r\n        .insert([product.toJSON()])\r\n        .select()\r\n        .single();\r\n      \r\n      if (error) {\r\n        console.error('Error creating product:', error);\r\n        // Provide more specific error messages\r\n        if (error.code === '42501') {\r\n          throw new Error('Permission denied. Please ensure you are logged in as admin.');\r\n        } else if (error.code === '23505') {\r\n          throw new Error('Product with this name already exists.');\r\n        } else {\r\n          throw new Error(`Database error: ${error.message}`);\r\n        }\r\n      }\r\n      \r\n      return new Product(insertedData);\r\n    } catch (error) {\r\n      console.error('Error in Product.create:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update existing product\r\n   * @param {string} id - Product ID\r\n   * @param {Object} data - Updated data\r\n   * @returns {Promise<Product|null>} Updated product or null if not found\r\n   */\r\n  static async update(id, data) {\r\n    try {\r\n      // First check if product exists\r\n      const existingProduct = await this.get(id);\r\n      if (!existingProduct) {\r\n        return null;\r\n      }\r\n      \r\n      // Update properties\r\n      Object.assign(existingProduct, data);\r\n      \r\n      const validation = existingProduct.validate();\r\n      if (!validation.isValid) {\r\n        throw new Error(`Validation failed: ${validation.errors.join(', ')}`);\r\n      }\r\n      \r\n      const { data: updatedData, error } = await supabase\r\n        .from(PRODUCTS_TABLE)\r\n        .update(existingProduct.toJSON())\r\n        .eq('id', id)\r\n        .select()\r\n        .single();\r\n      \r\n      if (error) {\r\n        console.error('Error updating product:', error);\r\n        throw new Error(`Failed to update product: ${error.message}`);\r\n      }\r\n      \r\n      return new Product(updatedData);\r\n    } catch (error) {\r\n      console.error('Error in Product.update:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete product\r\n   * @param {string} id - Product ID\r\n   * @returns {Promise<boolean>} True if deleted successfully\r\n   */\r\n  static async delete(id) {\r\n    try {\r\n      const { error } = await supabase\r\n        .from(PRODUCTS_TABLE)\r\n        .delete()\r\n        .eq('id', id);\r\n      \r\n      if (error) {\r\n        console.error('Error deleting product:', error);\r\n        throw new Error(`Failed to delete product: ${error.message}`);\r\n      }\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error in Product.delete:', error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}