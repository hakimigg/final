{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hakimm\\\\Desktop\\\\beta\\\\src\\\\contexts\\\\AdminContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminContext = /*#__PURE__*/createContext();\nexport const useAdmin = () => {\n  _s();\n  const context = useContext(AdminContext);\n  if (!context) {\n    throw new Error('useAdmin must be used within an AdminProvider');\n  }\n  return context;\n};\n_s(useAdmin, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AdminProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkAuth = async () => {\n      try {\n        if (!supabase) {\n          console.error('Supabase client not initialized');\n          setIsLoading(false);\n          return;\n        }\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        if (session !== null && session !== void 0 && session.user) {\n          setUser(session.user);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    checkAuth();\n\n    // Listen for auth changes\n    if (supabase) {\n      const {\n        data: {\n          subscription\n        }\n      } = supabase.auth.onAuthStateChange(async (event, session) => {\n        if (session !== null && session !== void 0 && session.user) {\n          setUser(session.user);\n          setIsAuthenticated(true);\n        } else {\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n        setIsLoading(false);\n      });\n      return () => subscription.unsubscribe();\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await supabase.auth.signOut();\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  const signup = async (email, password) => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email,\n        password\n      });\n      if (error) throw error;\n      return {\n        success: true,\n        data\n      };\n    } catch (error) {\n      console.error('Signup error:', error);\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const value = {\n    isAuthenticated,\n    isLoading,\n    user,\n    login,\n    logout,\n    signup\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s2(AdminProvider, \"fXtsS9VlG56CFg59Ule3HyF3KXk=\");\n_c = AdminProvider;\nvar _c;\n$RefreshReg$(_c, \"AdminProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsxDEV","_jsxDEV","AdminContext","useAdmin","_s","context","Error","AdminProvider","children","_s2","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","user","setUser","checkAuth","console","error","data","session","auth","getSession","subscription","onAuthStateChange","event","unsubscribe","login","email","password","signInWithPassword","success","message","logout","signOut","signup","signUp","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hakimm/Desktop/beta/src/contexts/AdminContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../lib/supabase';\n\nconst AdminContext = createContext();\n\nexport const useAdmin = () => {\n  const context = useContext(AdminContext);\n  if (!context) {\n    throw new Error('useAdmin must be used within an AdminProvider');\n  }\n  return context;\n};\n\nexport const AdminProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkAuth = async () => {\n      try {\n        if (!supabase) {\n          console.error('Supabase client not initialized');\n          setIsLoading(false);\n          return;\n        }\n\n        const { data: { session } } = await supabase.auth.getSession();\n        if (session?.user) {\n          setUser(session.user);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Auth check error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    checkAuth();\n\n    // Listen for auth changes\n    if (supabase) {\n      const { data: { subscription } } = supabase.auth.onAuthStateChange(\n        async (event, session) => {\n          if (session?.user) {\n            setUser(session.user);\n            setIsAuthenticated(true);\n          } else {\n            setUser(null);\n            setIsAuthenticated(false);\n          }\n          setIsLoading(false);\n        }\n      );\n\n      return () => subscription.unsubscribe();\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n\n      if (error) throw error;\n\n      setUser(data.user);\n      setIsAuthenticated(true);\n      return { success: true };\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await supabase.auth.signOut();\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  const signup = async (email, password) => {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n      });\n\n      if (error) throw error;\n\n      return { success: true, data };\n    } catch (error) {\n      console.error('Signup error:', error);\n      return { success: false, error: error.message };\n    }\n  };\n\n  const value = {\n    isAuthenticated,\n    isLoading,\n    user,\n    login,\n    logout,\n    signup,\n  };\n\n  return (\n    <AdminContext.Provider value={value}>\n      {children}\n    </AdminContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}